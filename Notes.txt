Object-oriented software development includes six development activities:
requirements elicitation, analysis, system design, object design, implementation, and testing.

• Use case diagrams represent the functionality of the system from a user’s point of view. 
  They define the boundaries of the system.

• Class diagrams represent the static structure of a system in terms of objects, their attributes, operations, and relationships.

• Interaction diagrams represent the system’s behavior in terms of interactions among a set of objects. 
They are used to identify objects in the application and implementation domains.

• State machine diagrams represent the behavior of nontrivial objects.

• Activity diagrams are flow diagrams used to represent the data flow or the control flow through a system.